<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="imgsubcriber_8cpp" kind="file">
    <compoundname>imgsubcriber.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">image_transport/image_transport.h</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="no">cv_bridge/cv_bridge.h</includes>
    <incdepgraph>
      <node id="51">
        <label>image_transport/image_transport.h</label>
      </node>
      <node id="53">
        <label>cv_bridge/cv_bridge.h</label>
      </node>
      <node id="49">
        <label>src/imgsubcriber.cpp</label>
        <link refid="imgsubcriber.cpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ros/ros.h</label>
      </node>
      <node id="52">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="imgsubcriber_8cpp_1a0d7dfd9133ce1e6b48bfdc8249db33d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void imageCallback</definition>
        <argsstring>(const sensor_msgs::ImageConstPtr &amp;msg)</argsstring>
        <name>imageCallback</name>
        <param>
          <type>const sensor_msgs::ImageConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gokul/catkin_ws/src/face_detection/src/imgsubcriber.cpp" line="15" column="1" bodyfile="/home/gokul/catkin_ws/src/face_detection/src/imgsubcriber.cpp" bodystart="15" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="imgsubcriber_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gokul/catkin_ws/src/face_detection/src/imgsubcriber.cpp" line="32" column="1" bodyfile="/home/gokul/catkin_ws/src/face_detection/src/imgsubcriber.cpp" bodystart="32" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>will<sp/>subscribe<sp/>the<sp/>image<sp/>from<sp/>rosmessage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>display<sp/>it<sp/>in<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;image_transport/image_transport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cv_bridge/cv_bridge.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*To<sp/>compile<sp/>this<sp/>execuatble</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*rosrun<sp/>face_detection<sp/>face_detection_imagesubscribe</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>imageCallback<sp/>function<sp/>gets<sp/>the<sp/>image<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>displays<sp/>an<sp/>image<sp/>in<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="imgsubcriber_8cpp_1a0d7dfd9133ce1e6b48bfdc8249db33d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imgsubcriber_8cpp_1a0d7dfd9133ce1e6b48bfdc8249db33d1" kindref="member">imageCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::ImageConstPtr&amp;<sp/>msg){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::imshow(</highlight><highlight class="stringliteral">&quot;Face<sp/>Detection&quot;</highlight><highlight class="normal">,<sp/>cv_bridge::toCvShare(msg,<sp/></highlight><highlight class="stringliteral">&quot;bgr8&quot;</highlight><highlight class="normal">)-&gt;image);<sp/></highlight><highlight class="comment">//<sp/>displays<sp/>an<sp/>subcribed<sp/>image<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::waitKey(30);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(cv_bridge::Exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_ERROR(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>convert<sp/>from<sp/>&apos;%s&apos;<sp/>to<sp/>&apos;bgr8&apos;.&quot;</highlight><highlight class="normal">,<sp/>msg-&gt;encoding.c_str());<sp/></highlight><highlight class="comment">//<sp/>display<sp/>Exception<sp/>whwn<sp/>image<sp/>could<sp/>not<sp/>be<sp/>displayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="imgsubcriber_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgsubcriber_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;image_listener&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>cv::namedWindow(</highlight><highlight class="stringliteral">&quot;Face<sp/>Detection&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>creates<sp/>window<sp/>to<sp/>diplay<sp/>an<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>cv::startWindowThread();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>image_transport::ImageTransport<sp/>it(nh);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>image_transport::Subscriber<sp/>sub<sp/>=<sp/>it.subscribe(</highlight><highlight class="stringliteral">&quot;camera/image_processed&quot;</highlight><highlight class="normal">,<sp/>1,<sp/><ref refid="imgsubcriber_8cpp_1a0d7dfd9133ce1e6b48bfdc8249db33d1" kindref="member">imageCallback</ref>);<sp/></highlight><highlight class="comment">//<sp/>subscribe<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>cv::destroyWindow(</highlight><highlight class="stringliteral">&quot;Face<sp/>Detection&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>closes<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/gokul/catkin_ws/src/face_detection/src/imgsubcriber.cpp"/>
  </compounddef>
</doxygen>
